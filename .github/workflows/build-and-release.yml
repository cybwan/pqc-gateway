name: Build and Release

on:
  push:
    tags:
      - "v*.*.*" # v1.0.0, v2.1.3
      - "v*.*.*-*" # v1.0.0-alpha, v2.1.0-beta.1
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: linux-x64
            artifact_name: gw
            asset_name: pqc-gateway-linux-x64
          - os: macos-latest
            target: macos-arm64
            artifact_name: gw
            asset_name: pqc-gateway-macos-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake clang llvm-dev

      - name: Install dependencies (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install cmake
          # Use Xcode clang instead of brew llvm for better compatibility
          sudo xcode-select --install || true
          echo "Using Xcode clang for ARM64 compatibility"

      - name: Set up environment variables
        run: |
          if [ "${{ github.event_name }}" = "push" ] && [ "${{ startsWith(github.ref, 'refs/tags/') }}" = "true" ]; then
            echo "PGW_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "PGW_VERSION=dev-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          fi

      - name: Initialize submodules
        run: |
          git submodule update --init --recursive

      - name: Build project
        run: |
          make
        env:
          CC: clang
          CXX: clang++

      - name: Verify build
        run: |
          ./bin/gw -v
          file ./bin/gw

      - name: Create tarball
        run: |
          mkdir -p dist
          cp bin/gw dist/
          cp README.md dist/
          cp LICENSE dist/
          tar -czf ${{ matrix.asset_name }}.tar.gz -C dist .

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.asset_name }}.tar.gz

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -la artifacts/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## PQC Gateway Release ${{ github.ref_name }}

            ### Changes
            - Built from commit: ${{ github.sha }}
            - Automated build for multiple platforms

            ### Downloads
            - **Linux x64**: `pqc-gateway-linux-x64.tar.gz`
            - **macOS ARM64**: `pqc-gateway-macos-arm64.tar.gz`

            ### Installation
            1. Download the appropriate archive for your platform
            2. Extract: `tar -xzf pqc-gateway-<platform>.tar.gz`
            3. Make executable: `chmod +x gw`
            4. Run: `./gw -v` to verify installation

            ### Usage
            ```bash
            # Start with config file
            ./gw -c config.yaml

            # Start configuration server
            ./gw -s /path/to/config/dir

            # Show help
            ./gw -h
            ```
          draft: true
          prerelease: false

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/pqc-gateway-linux-x64/pqc-gateway-linux-x64.tar.gz
          asset_name: pqc-gateway-linux-x64.tar.gz
          asset_content_type: application/gzip

      - name: Upload macOS ARM64 Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/pqc-gateway-macos-arm64/pqc-gateway-macos-arm64.tar.gz
          asset_name: pqc-gateway-macos-arm64.tar.gz
          asset_content_type: application/gzip
